function runSimulation

    databaseName = 'manchester_database';
    sceneName = 'scene3';
    
   % databaseName = 'harvard_database';
   % sceneName = 'imgb6';
    
    
    verbosity = 10;
    
    % Instantiate a new sceneProcessor
    sceneProcessor = ISETbioSceneProcessor(databaseName, sceneName, verbosity);
    
    % Compute optical image
    % We may specify custom optics params
%     opticsParamsStruct = struct('name', 'human', ...);
%     sceneProcessor.computeOpticalImage(...
%         'opticsParams', opticsParamsStruct, ...
%         'forceRecompute', true ...
%         'visualizeResults', true
%     );


    % or use default optics
    sceneProcessor.computeOpticalImage(...
        'forceRecompute', false, ...
        'visualizeResultsAsIsetbioWindows', false, ...
        'visualizeResultsAsImages', false ...
    );

    % We may specify custon sensor params
    sensorParamsStruct = struct(...
        'name', 'humanLMS', ...
        'conesAcross', 8, ...
        'coneAperture', 5*1e-6, ... % specified in meters
        'heightToWidthRatio', 1.0, ...
        'coneIntegrationTime', 0.050 ...
    );

    % ... and custom eye movement params
    eyeMovementParamsStruct = struct(...
        'name', 'fixationalEyeMovements', ...
        'samplesPerFixation', 20, ...% 80, ...
        'overlapFactor', 1.0 ...  % 50 % overlap
    );

    % Compute the time-varying activation of the sensor mosaic
    sceneProcessor.computeSensorActivation(...
        'forceRecompute', false, ...
        'randomSeed',  47985654, ...   % pass empty to generate new sensor or some seed to generate same sensor
        'sensorParams', sensorParamsStruct , ...
        'eyeMovementParams', eyeMovementParamsStruct, ...
        'visualizeResultsAsIsetbioWindows', false, ...
        'visualizeResultsAsImages', true, ...
        'generateVideo', true ...
    );


end

